//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EntityModel", "HunterAccount", "Hunter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ComputeMidwest.Entity.Hunter), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ComputeMidwest.Entity.Account))]
[assembly: EdmRelationshipAttribute("EntityModel", "HuntObjective", "Hunt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ComputeMidwest.Entity.Hunt), "Objective", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ComputeMidwest.Entity.Objective), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "HunterFoundObjective", "Hunter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ComputeMidwest.Entity.Hunter), "FoundObjective", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ComputeMidwest.Entity.FoundObjective), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "HuntAccount", "Hunt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ComputeMidwest.Entity.Hunt), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ComputeMidwest.Entity.Account))]
[assembly: EdmRelationshipAttribute("EntityModel", "HunterHuntInstance", "Hunter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ComputeMidwest.Entity.Hunter), "HuntInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ComputeMidwest.Entity.HuntInstance))]
[assembly: EdmRelationshipAttribute("EntityModel", "HuntHuntInstance", "Hunt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ComputeMidwest.Entity.Hunt), "HuntInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ComputeMidwest.Entity.HuntInstance), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "FoundObjectiveObjective", "FoundObjective", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ComputeMidwest.Entity.FoundObjective), "Objective", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ComputeMidwest.Entity.Objective))]
[assembly: EdmRelationshipAttribute("EntityModel", "HuntInstanceAccount", "HuntInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ComputeMidwest.Entity.HuntInstance), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ComputeMidwest.Entity.Account))]

#endregion

namespace ComputeMidwest.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EntityModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EntityModelContainer object using the connection string found in the 'EntityModelContainer' section of the application configuration file.
        /// </summary>
        public EntityModelContainer() : base("name=EntityModelContainer", "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityModelContainer object.
        /// </summary>
        public EntityModelContainer(string connectionString) : base(connectionString, "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityModelContainer object.
        /// </summary>
        public EntityModelContainer(EntityConnection connection) : base(connection, "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Hunt> Hunts
        {
            get
            {
                if ((_Hunts == null))
                {
                    _Hunts = base.CreateObjectSet<Hunt>("Hunts");
                }
                return _Hunts;
            }
        }
        private ObjectSet<Hunt> _Hunts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Hunter> Hunters
        {
            get
            {
                if ((_Hunters == null))
                {
                    _Hunters = base.CreateObjectSet<Hunter>("Hunters");
                }
                return _Hunters;
            }
        }
        private ObjectSet<Hunter> _Hunters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HuntInstance> HuntInstances
        {
            get
            {
                if ((_HuntInstances == null))
                {
                    _HuntInstances = base.CreateObjectSet<HuntInstance>("HuntInstances");
                }
                return _HuntInstances;
            }
        }
        private ObjectSet<HuntInstance> _HuntInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Objective> Objectives
        {
            get
            {
                if ((_Objectives == null))
                {
                    _Objectives = base.CreateObjectSet<Objective>("Objectives");
                }
                return _Objectives;
            }
        }
        private ObjectSet<Objective> _Objectives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FoundObjective> FoundObjectives
        {
            get
            {
                if ((_FoundObjectives == null))
                {
                    _FoundObjectives = base.CreateObjectSet<FoundObjective>("FoundObjectives");
                }
                return _FoundObjectives;
            }
        }
        private ObjectSet<FoundObjective> _FoundObjectives;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Hunts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHunts(Hunt hunt)
        {
            base.AddObject("Hunts", hunt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Hunters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHunters(Hunter hunter)
        {
            base.AddObject("Hunters", hunter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HuntInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHuntInstances(HuntInstance huntInstance)
        {
            base.AddObject("HuntInstances", huntInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Objectives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectives(Objective objective)
        {
            base.AddObject("Objectives", objective);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FoundObjectives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFoundObjectives(FoundObjective foundObjective)
        {
            base.AddObject("FoundObjectives", foundObjective);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="authType">Initial value of the AuthType property.</param>
        /// <param name="accountToken">Initial value of the AccountToken property.</param>
        public static Account CreateAccount(global::System.Guid id, global::System.String name, global::System.String authType, global::System.String accountToken)
        {
            Account account = new Account();
            account.Id = id;
            account.Name = name;
            account.AuthType = authType;
            account.AccountToken = accountToken;
            return account;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthType
        {
            get
            {
                return _AuthType;
            }
            set
            {
                OnAuthTypeChanging(value);
                ReportPropertyChanging("AuthType");
                _AuthType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthType");
                OnAuthTypeChanged();
            }
        }
        private global::System.String _AuthType;
        partial void OnAuthTypeChanging(global::System.String value);
        partial void OnAuthTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
<<<<<<< HEAD
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfileImageUrl
        {
            get
            {
                return _ProfileImageUrl;
            }
            set
            {
                OnProfileImageUrlChanging(value);
                ReportPropertyChanging("ProfileImageUrl");
                _ProfileImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfileImageUrl");
                OnProfileImageUrlChanged();
            }
        }
        private global::System.String _ProfileImageUrl;
        partial void OnProfileImageUrlChanging(global::System.String value);
        partial void OnProfileImageUrlChanged();
=======
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountToken
        {
            get
            {
                return _AccountToken;
            }
            set
            {
                OnAccountTokenChanging(value);
                ReportPropertyChanging("AccountToken");
                _AccountToken = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountToken");
                OnAccountTokenChanged();
            }
        }
        private global::System.String _AccountToken;
        partial void OnAccountTokenChanging(global::System.String value);
        partial void OnAccountTokenChanged();
>>>>>>> 34b54be36a8ffff2bd6b34239a61025bcbfe9112

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HunterAccount", "Hunter")]
        public EntityCollection<Hunter> Hunters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hunter>("EntityModel.HunterAccount", "Hunter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hunter>("EntityModel.HunterAccount", "Hunter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HuntAccount", "Hunt")]
        public EntityCollection<Hunt> Hunts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hunt>("EntityModel.HuntAccount", "Hunt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hunt>("EntityModel.HuntAccount", "Hunt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HuntInstanceAccount", "HuntInstance")]
        public EntityCollection<HuntInstance> HuntInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HuntInstance>("EntityModel.HuntInstanceAccount", "HuntInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HuntInstance>("EntityModel.HuntInstanceAccount", "HuntInstance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="FoundObjective")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FoundObjective : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FoundObjective object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="hunterId">Initial value of the HunterId property.</param>
        /// <param name="timeFound">Initial value of the TimeFound property.</param>
        /// <param name="approved">Initial value of the Approved property.</param>
        /// <param name="imageUrl">Initial value of the ImageUrl property.</param>
        public static FoundObjective CreateFoundObjective(global::System.Guid id, global::System.Guid hunterId, global::System.DateTime timeFound, global::System.Boolean approved, global::System.String imageUrl)
        {
            FoundObjective foundObjective = new FoundObjective();
            foundObjective.Id = id;
            foundObjective.HunterId = hunterId;
            foundObjective.TimeFound = timeFound;
            foundObjective.Approved = approved;
            foundObjective.ImageUrl = imageUrl;
            return foundObjective;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid HunterId
        {
            get
            {
                return _HunterId;
            }
            set
            {
                OnHunterIdChanging(value);
                ReportPropertyChanging("HunterId");
                _HunterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HunterId");
                OnHunterIdChanged();
            }
        }
        private global::System.Guid _HunterId;
        partial void OnHunterIdChanging(global::System.Guid value);
        partial void OnHunterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeFound
        {
            get
            {
                return _TimeFound;
            }
            set
            {
                OnTimeFoundChanging(value);
                ReportPropertyChanging("TimeFound");
                _TimeFound = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeFound");
                OnTimeFoundChanged();
            }
        }
        private global::System.DateTime _TimeFound;
        partial void OnTimeFoundChanging(global::System.DateTime value);
        partial void OnTimeFoundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private global::System.Boolean _Approved;
        partial void OnApprovedChanging(global::System.Boolean value);
        partial void OnApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HunterFoundObjective", "Hunter")]
        public Hunter Hunter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hunter>("EntityModel.HunterFoundObjective", "Hunter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hunter>("EntityModel.HunterFoundObjective", "Hunter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hunter> HunterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hunter>("EntityModel.HunterFoundObjective", "Hunter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hunter>("EntityModel.HunterFoundObjective", "Hunter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "FoundObjectiveObjective", "Objective")]
        public Objective Objective
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Objective>("EntityModel.FoundObjectiveObjective", "Objective").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Objective>("EntityModel.FoundObjectiveObjective", "Objective").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Objective> ObjectiveReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Objective>("EntityModel.FoundObjectiveObjective", "Objective");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Objective>("EntityModel.FoundObjectiveObjective", "Objective", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Hunt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hunt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Hunt object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Hunt CreateHunt(global::System.Guid id, global::System.String name, global::System.String description)
        {
            Hunt hunt = new Hunt();
            hunt.Id = id;
            hunt.Name = name;
            hunt.Description = description;
            return hunt;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HuntObjective", "Objective")]
        public EntityCollection<Objective> Objectives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Objective>("EntityModel.HuntObjective", "Objective");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Objective>("EntityModel.HuntObjective", "Objective", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HuntAccount", "Account")]
        public Account Creator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EntityModel.HuntAccount", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EntityModel.HuntAccount", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> CreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EntityModel.HuntAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("EntityModel.HuntAccount", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HuntHuntInstance", "HuntInstance")]
        public EntityCollection<HuntInstance> HuntInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HuntInstance>("EntityModel.HuntHuntInstance", "HuntInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HuntInstance>("EntityModel.HuntHuntInstance", "HuntInstance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Hunter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hunter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Hunter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        public static Hunter CreateHunter(global::System.Guid id, global::System.Int16 score)
        {
            Hunter hunter = new Hunter();
            hunter.Id = id;
            hunter.Score = score;
            return hunter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int16 _Score;
        partial void OnScoreChanging(global::System.Int16 value);
        partial void OnScoreChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HunterAccount", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EntityModel.HunterAccount", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EntityModel.HunterAccount", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EntityModel.HunterAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("EntityModel.HunterAccount", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HunterFoundObjective", "FoundObjective")]
        public EntityCollection<FoundObjective> FoundObjectives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FoundObjective>("EntityModel.HunterFoundObjective", "FoundObjective");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FoundObjective>("EntityModel.HunterFoundObjective", "FoundObjective", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HunterHuntInstance", "HuntInstance")]
        public HuntInstance HuntInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HuntInstance>("EntityModel.HunterHuntInstance", "HuntInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HuntInstance>("EntityModel.HunterHuntInstance", "HuntInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HuntInstance> HuntInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HuntInstance>("EntityModel.HunterHuntInstance", "HuntInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HuntInstance>("EntityModel.HunterHuntInstance", "HuntInstance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="HuntInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HuntInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HuntInstance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="huntId">Initial value of the HuntId property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        public static HuntInstance CreateHuntInstance(global::System.Guid id, global::System.Guid huntId, global::System.DateTime startTime, global::System.DateTime endTime)
        {
            HuntInstance huntInstance = new HuntInstance();
            huntInstance.Id = id;
            huntInstance.HuntId = huntId;
            huntInstance.StartTime = startTime;
            huntInstance.EndTime = endTime;
            return huntInstance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid HuntId
        {
            get
            {
                return _HuntId;
            }
            set
            {
                OnHuntIdChanging(value);
                ReportPropertyChanging("HuntId");
                _HuntId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HuntId");
                OnHuntIdChanged();
            }
        }
        private global::System.Guid _HuntId;
        partial void OnHuntIdChanging(global::System.Guid value);
        partial void OnHuntIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HunterHuntInstance", "Hunter")]
        public EntityCollection<Hunter> Hunters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hunter>("EntityModel.HunterHuntInstance", "Hunter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hunter>("EntityModel.HunterHuntInstance", "Hunter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HuntHuntInstance", "Hunt")]
        public Hunt Hunt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hunt>("EntityModel.HuntHuntInstance", "Hunt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hunt>("EntityModel.HuntHuntInstance", "Hunt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hunt> HuntReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hunt>("EntityModel.HuntHuntInstance", "Hunt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hunt>("EntityModel.HuntHuntInstance", "Hunt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HuntInstanceAccount", "Account")]
        public Account Admin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EntityModel.HuntInstanceAccount", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EntityModel.HuntInstanceAccount", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AdminReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EntityModel.HuntInstanceAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("EntityModel.HuntInstanceAccount", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Objective")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Objective : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Objective object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="huntId">Initial value of the HuntId property.</param>
        public static Objective CreateObjective(global::System.Guid id, global::System.String name, global::System.String description, global::System.Int16 score, global::System.Guid huntId)
        {
            Objective objective = new Objective();
            objective.Id = id;
            objective.Name = name;
            objective.Description = description;
            objective.Score = score;
            objective.HuntId = huntId;
            return objective;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int16 _Score;
        partial void OnScoreChanging(global::System.Int16 value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid HuntId
        {
            get
            {
                return _HuntId;
            }
            set
            {
                OnHuntIdChanging(value);
                ReportPropertyChanging("HuntId");
                _HuntId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HuntId");
                OnHuntIdChanged();
            }
        }
        private global::System.Guid _HuntId;
        partial void OnHuntIdChanging(global::System.Guid value);
        partial void OnHuntIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "HuntObjective", "Hunt")]
        public Hunt Hunt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hunt>("EntityModel.HuntObjective", "Hunt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hunt>("EntityModel.HuntObjective", "Hunt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hunt> HuntReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hunt>("EntityModel.HuntObjective", "Hunt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hunt>("EntityModel.HuntObjective", "Hunt", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
